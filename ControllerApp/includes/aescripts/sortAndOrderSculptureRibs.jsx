/* Incredible Machines 2014 	cpiuggi 05/22/14  */var project = app.project;var compositions = new AEHelper("Composition")var comp = compositions.byName("Sculpt FILL")if(comp != null){        //$.writeln(comp.numLayers)        for(var i = 1; i<= comp.numLayers;i++){          //iterate through the masks          var layerMask = comp.layer(i).property("ADBE Mask Parade")          $.writeln("Layer Index: "+i+" | NUM Masks: "+layerMask.numProperties)          var counter = 1;          //run through all of the layerMask Properties with a custom counter          while(counter <= layerMask.numProperties){                  var sorter = []                  //create an array to sort the items by value                  //iterate through each and get the max vertices for each X                  for(var j = layerMask.numProperties; j>0 ; j--){                      var shape = layerMask.property(j).property("ADBE Mask Shape").value                      var max = returnMax(shape.vertices)                      sorter.push({index: j, val: max })                  }                  //sort the array highest to lowest                  sorter.sort(function(a,b){return  b.val-a.val})                  //reverse them                  sorter.reverse()                  //$.writeln(JSON.stringify(sorter))                  layerMask.property(sorter[counter-1].index).moveTo(counter)                  //set the mask opacity to have a linear expression                  layerMask.property(counter).property("Mask Opacity").expression = returnOpacityExpression(counter);                  counter++              }          }    }function AEHelper(_type){        //set up our vars        var type =_type        //intialize our methods        this.setup = function(){                for(var i =1; i<=app.project.numItems; i++){                    if(app.project.items[i].typeName === type )                        this.add(app.project.items[i])                }            }        //Array for Project Items        this.all = [];        this.length= function(){ return this.all.length }        // Push Custom Item into Compositions Collection        this.add = function(_CustomItem){            $.writeln(_CustomItem.name)            this.all.push(_CustomItem)        }        this.byName=function(name){            //name exists            for(var i =0; i< this.all.length; i++) if(this.all[i].name === name) return this.all[i]            //name doesn't exist            return null;        }        //run setup on creation        this.setup()    }function returnMax(vertices){    var max =0;    for(var k = 0; k < vertices.length; k++){            if(max < vertices[k][0]) max = vertices[k][0]    }    return Math.round(max)    }function returnOpacityExpression(counter){  var exp = "linear(time,thisLayer.inPoint,thisLayer.inPoint+"+counter+",0,100)";  var exp = "start = thisLayer.inPoint +"+(counter/10)+";"  exp+= "end = thisLayer.inPoint +"+(counter/10)+"+ 0.3;"  exp+= " linear(time,start,end,0,100);"  exp+= "if(time>end){linear(time,end+0.5,end+0.5,100,0)};"  return exp}